---
- name: Cleanup FitonDuty March Dashboard Database
  hosts: database_servers
  gather_facts: yes
  become: yes
  vars_files:
    - "../vars/{{ environment_name }}/vault.yml"
  vars:
    # Database configuration
    server_db_name: "{{ environment_name | default('testing') }}"
    march_db_name: "{{ db_name | default('fitonduty_march') }}"
    march_db_user: "{{ db_user | default('fitonduty_march') }}"
    database_host: "{{ ansible_host | default('localhost') }}"
    database_port: "{{ db_port | default('5432') }}"
    postgres_user: "{{ pg_admin_user | default('postgres') }}"
    march_working_dir: "/opt/fitonduty-march"
    march_venv_dir: "/opt/fitonduty-march/venv"

  pre_tasks:
    - name: Verify required variables are set
      assert:
        that:
          - vault_postgres_password is defined
        fail_msg: "Required vault variables not set. Please check your vault file."

    - name: Confirm cleanup operation
      pause:
        prompt: |
          ‚ö†Ô∏è  WARNING: This will completely remove:
          
          - Database: {{ march_db_name }}
          - Database User: {{ march_db_user }}
          - All data and tables
          - Working directory: {{ march_working_dir }}
          - Python virtual environment
          - pg_hba.conf entries
          
          This action is IRREVERSIBLE!
          
          Press ENTER to continue or Ctrl+C to abort
      when: not skip_confirmation | default(false)

  tasks:
    - name: Stop any running march dashboard services
      systemd:
        name: "{{ item }}"
        state: stopped
        enabled: no
      loop:
        - fitonduty-march
        - fitonduty-march-dashboard
      ignore_errors: yes

    - name: Remove march database entry from pg_hba.conf
      blockinfile:
        path: "/etc/postgresql/{{ postgresql_version | default('16') }}/main/pg_hba.conf"
        marker: "# {mark} ANSIBLE MANAGED BLOCK - March Dashboard"
        state: absent
        backup: yes
      notify: restart postgresql
      ignore_errors: yes

    - name: Force handlers to run now (restart postgresql)
      meta: flush_handlers

    - name: Drop march database connections (force disconnect)
      postgresql_query:
        login_host: "{{ database_host }}"
        login_port: "{{ database_port }}"
        login_user: "{{ postgres_user }}"
        login_password: "{{ vault_postgres_password }}"
        login_db: postgres
        query: |
          SELECT pg_terminate_backend(pid)
          FROM pg_stat_activity
          WHERE datname = %s AND pid <> pg_backend_pid()
        positional_args:
          - "{{ march_db_name }}"
      become_user: postgres
      ignore_errors: yes

    - name: Drop march database
      postgresql_db:
        login_host: "{{ database_host }}"
        login_port: "{{ database_port }}"
        login_user: "{{ postgres_user }}"
        login_password: "{{ vault_postgres_password }}"
        name: "{{ march_db_name }}"
        state: absent
      become_user: postgres
      ignore_errors: yes

    - name: Drop march database user
      postgresql_user:
        login_host: "{{ database_host }}"
        login_port: "{{ database_port }}"
        login_user: "{{ postgres_user }}"
        login_password: "{{ vault_postgres_password }}"
        login_db: postgres
        name: "{{ march_db_user }}"
        state: absent
      become_user: postgres
      ignore_errors: yes

    - name: Remove march working directory
      file:
        path: "{{ march_working_dir }}"
        state: absent

    - name: Remove any march-related systemd service files
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - /etc/systemd/system/fitonduty-march.service
        - /etc/systemd/system/fitonduty-march-dashboard.service
      notify: reload systemd

    - name: Remove march-related log files
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - /var/log/fitonduty-march.log
        - /var/log/fitonduty-march-dashboard.log
      ignore_errors: yes

    - name: Clean up any march-related cron jobs
      cron:
        name: "{{ item }}"
        state: absent
      loop:
        - "FitonDuty March Backup"
        - "FitonDuty March Cleanup"
      become_user: postgres
      ignore_errors: yes

  handlers:
    - name: restart postgresql
      systemd:
        name: postgresql
        state: restarted

    - name: reload systemd
      systemd:
        daemon_reload: yes

  post_tasks:
    - name: Verify cleanup completion
      postgresql_query:
        login_host: "{{ database_host }}"
        login_port: "{{ database_port }}"
        login_user: "{{ postgres_user }}"
        login_password: "{{ vault_postgres_password }}"
        login_db: postgres
        query: "SELECT 1 FROM pg_database WHERE datname = %s"
        positional_args:
          - "{{ march_db_name }}"
      register: db_check
      become_user: postgres

    - name: Verify user cleanup
      postgresql_query:
        login_host: "{{ database_host }}"
        login_port: "{{ database_port }}"
        login_user: "{{ postgres_user }}"
        login_password: "{{ vault_postgres_password }}"
        login_db: postgres
        query: "SELECT 1 FROM pg_roles WHERE rolname = %s"
        positional_args:
          - "{{ march_db_user }}"
      register: user_check
      become_user: postgres

    - name: Display cleanup results
      debug:
        msg: |
          üßπ March Dashboard Cleanup Complete!
          
          Database {{ march_db_name }}: {% if db_check.rowcount == 0 %}‚úÖ REMOVED{% else %}‚ùå STILL EXISTS{% endif %}
          User {{ march_db_user }}: {% if user_check.rowcount == 0 %}‚úÖ REMOVED{% else %}‚ùå STILL EXISTS{% endif %}
          Working Directory: {% if ansible_check_mode %}CHECK MODE{% else %}‚úÖ REMOVED{% endif %}
          pg_hba.conf entries: ‚úÖ REMOVED
          
          You can now run the setup playbook to start fresh:
          ansible-playbook -i inventory/{{ environment_name }} playbooks/march_database.yml -e environment_name={{ environment_name }}